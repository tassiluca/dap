@startuml scafi-3-mp-api

package "scafi-mp-api" as mp {
    package shared {
        interface PortableTypes {
            +type Map[K, V]
            +given [K, V] => Iso[Map[K, V], collection.Map[K, V]]
            ---
            +type Function1[T1, R]
            +given [T1, R] => Iso[Function1[T1, R], T1 => R]
            ---
            +other types
        }
        note top of PortableTypes
            Portable types among different platforms 
            along with their Scala conversions.

            All portable libraries are built on top 
            of these agnostic types.
        end note

        interface PortableLibrary {
            +type Language <: AggregateFoundation
            +language: Language
            ---
            +type SharedData[Value]
            +given [Value] => Iso[SharedData[Value], language.SharedData[Value]]
        }
        PortableLibrary o-left-> PortableTypes : {self-type}

        interface PortableExchangeCalculusLibrary extends PortableLibrary {
            +type Language <: AggregateFoundation & ExchangeSyntax
            +**@JSExport** exchange[Value](initial: SharedData[Value])(\n    f: Function1[SharedData[Value], ReturnSending[SharedData[Value]]]\n): SharedData[Value]
        }

        interface PortableBranchingLibrary extends PortableLibrary {
            +type Language <: AggregateFoundation \n    & BranchingSyntax
            +**@JSExport** branch[Value](condition: Boolean)(\n    thenBranch: Value\n)(elseBranch: Value): Value
        }

        interface PortableCommonLibrary extends PortableLibrary {
            +**@JSExport** localId: language.LocalId
            +**@JSExport** device: SharedData[language.Device]
        }
    
        interface FullPortableLibrary
        note bottom of FullPortableLibrary
            Aggregates all the portable libraries 
            in a singe entry point trait.
        end note
        PortableExchangeCalculusLibrary --|> FullPortableLibrary
        PortableBranchingLibrary --|> FullPortableLibrary
        PortableCommonLibrary --|> FullPortableLibrary
    }

    package "js-native" as jsnative {
        interface PortableFieldBasedSharedData extends mp.shared.PortableExchangeCalculusLibrary {

        }
        note right of PortableFieldBasedSharedData
            Non-JVM portable definition 
            of a field-based shared data.
        end note
    }

    package js {
        interface JSTypes extends mp.shared.PortableTypes
        note bottom of JSTypes
            JavaScript-specific 
            implementation of portable types.
        end note

        class FullLibrary implements mp.shared.FullPortableLibrary, mp.jsnative.PortableFieldBasedSharedData
        JSTypes <|.left. FullLibrary 
        note bottom of FullLibrary
            Entry point for JavaScript 
            portable libraries.
        end note
    }
}
@enduml